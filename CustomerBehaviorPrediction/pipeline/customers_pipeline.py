import kfp
from kfp import dsl
from kfp.components import func_to_container_op


@func_to_container_op
def show_results(linear_regression: float) -> None:
    # Given the outputs from linear regression components
    # the results are shown.

    print(f"Linear regression (accuracy): {linear_regression}")


@dsl.pipeline(name='Customer Pipeline', description='Applies Linear Regression for Customer Spends predicition.')
def customers_pipeline():

    # Loads the yaml manifest for each component
    load = kfp.components.load_component_from_file('CustomerBehaviorPrediction/pipeline/load_data/load_data.yaml')
    linear_regression = kfp.components.load_component_from_file('CustomerBehaviorPrediction/pipeline/linear_regression/linear_regression.yaml')

    # Run load_data task
    load_task = load()

    # Run tasks "linear_regression" given
    # the output generated by "load_task".
    linear_regression_task = linear_regression(load_task.output)

    # Given the outputs from "linear_regression"
    # the component "show_results" is called to print the results.
    show_results(linear_regression_task.output)


if __name__ == '__main__':
    kfp.compiler.Compiler().compile(customers_pipeline, 'customers_pipeline.yaml')